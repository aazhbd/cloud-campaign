{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Cloudformation template to create lambda and API gateway to send emails",
    "Resources": {
        "GreetingLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "\n",
                            [
				"import smtplib, ssl",
				"",
				"message = '''Subject: This is the campaign message",
				"The body of the campaign message.'''",
				"context = ssl.create_default_context()",
				"",
				"with smtplib.SMTP_SSL('smtp.gmail.com', 465, context=context) as server:",
				"    server.login('aazhbd@hotmail.com', 'asdfasdf')",
				"    server.sendmail('aazhbd@hotmail.com', 'syedatasneemrumy@gmail.com', message)",
                                ""
                            ]
                        ]
                    }
                },
                "Description": "Send email",
                "FunctionName": "sendingCampaignEmail",
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.7"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "91e05e21-3996-4099-b643-aa913de3ad8f"
                }
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7e63237c-45d5-4fe9-bc08-882aacf89696"
                }
            }
        },
        "GreetingApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "Greeting API",
                "Description": "API used for Greeting requests",
                "FailOnWarnings": true
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "4d95c259-ebad-4ea8-ae41-81e1ce6f827c"
                }
            }
        },
        "LambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "GreetingLambda",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "GreetingApi"
                            },
                            "/*"
                        ]
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2532fbfa-7fcb-45f4-be11-63e41eaa08ff"
                }
            }
        },
        "GreetingApiStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "ApiDeployment"
                },
                "MethodSettings": [
                    {
                        "DataTraceEnabled": true,
                        "HttpMethod": "*",
                        "ResourcePath": "/*"
                    }
                ],
                "RestApiId": {
                    "Ref": "GreetingApi"
                },
                "StageName": "LATEST",
                "Variables": {
                    "Tom": "Maslen-v4"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3e7b0636-6106-4dbf-81f0-c2b623096d35"
                }
            }
        },
        "ApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": [
                "GreetingRequestGET",
                "GreetingRequestPOST"
            ],
            "Properties": {
                "RestApiId": {
                    "Ref": "GreetingApi"
                },
                "StageName": "DummyStage"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "12f34a87-f392-4ad6-a57c-f06e05c2dbf5"
                }
            }
        },
        "GreetingResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "GreetingApi"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "GreetingApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "greeting"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "5485849b-2e13-4221-ac9d-1dabef8ee52a"
                }
            }
        },
        "GreetingRequestGET": {
            "DependsOn": "LambdaPermission",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "GET",
                "Integration": {
                    "Type": "AWS",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GreetingLambda",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200,
                            "ResponseTemplates": {
                                "application/json": "$input.json('$.body')"
                            }
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": {
                            "Fn::Join": [
                                "",
                                [
                                    "#set($allParams = $input.params())\n",
                                    "{\n",
                                    "  \"body-json\": \"$input.json('$')\",\n",
                                    "  \"params\" : {\n",
                                    "    #foreach($type in $allParams.keySet())\n",
                                    "      #set($params = $allParams.get($type))\n",
                                    "      \"$type\" : {\n",
                                    "        #foreach($paramName in $params.keySet())\n",
                                    "          \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\"\n",
                                    "          #if($foreach.hasNext),#end\n",
                                    "        #end\n",
                                    "      }\n",
                                    "    #if($foreach.hasNext),#end\n",
                                    "    #end\n",
                                    "  },\n",
                                    "  \"stage-variables\": {\n",
                                    "    #foreach($key in $stageVariables.keySet())\n",
                                    "      \"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\"\n",
                                    "      #if($foreach.hasNext),#end\n",
                                    "    #end\n",
                                    "  },\n",
                                    "  \"context\" : {\n",
                                    "    \"account-id\" : \"$context.identity.accountId\",\n",
                                    "    \"api-id\" : \"$context.apiId\",\n",
                                    "    \"api-key\" : \"$context.identity.apiKey\",\n",
                                    "    \"authorizer-principal-id\" : \"$context.authorizer.principalId\",\n",
                                    "    \"caller\" : \"$context.identity.caller\",\n",
                                    "    \"cognito-authentication-provider\" : \"$context.identity.cognitoAuthenticationProvider\",\n",
                                    "    \"cognito-authentication-type\" : \"$context.identity.cognitoAuthenticationType\",\n",
                                    "    \"cognito-identity-id\" : \"$context.identity.cognitoIdentityId\",\n",
                                    "    \"cognito-identity-pool-id\" : \"$context.identity.cognitoIdentityPoolId\",\n",
                                    "    \"http-method\" : \"$context.httpMethod\",\n",
                                    "    \"stage\" : \"$context.stage\",\n",
                                    "    \"source-ip\" : \"$context.identity.sourceIp\",\n",
                                    "    \"user\" : \"$context.identity.user\",\n",
                                    "    \"user-agent\" : \"$context.identity.userAgent\",\n",
                                    "    \"user-arn\" : \"$context.identity.userArn\",\n",
                                    "    \"request-id\" : \"$context.requestId\",\n",
                                    "    \"resource-id\" : \"$context.resourceId\",\n",
                                    "    \"resource-path\" : \"$context.resourcePath\"\n",
                                    "  }\n",
                                    "}"
                                ]
                            ]
                        }
                    }
                },
                "RequestParameters": {
                    "method.request.querystring.name": false
                },
                "ResourceId": {
                    "Ref": "GreetingResource"
                },
                "RestApiId": {
                    "Ref": "GreetingApi"
                },
                "MethodResponses": [
                    {
                        "StatusCode": 200
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7a48fe27-bbc2-4ef3-87c2-25a205b85314"
                }
            }
        },
        "GreetingRequestPOST": {
            "DependsOn": "LambdaPermission",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "POST",
                "Integration": {
                    "Type": "AWS",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GreetingLambda",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200,
                            "ResponseTemplates": {
                                "application/json": "$input.json('$.body')"
                            }
                        }
                    ],
                    "RequestTemplates": {
                        "application/json": {
                            "Fn::Join": [
                                "",
                                [
                                    "#set($allParams = $input.params())\n",
                                    "{\n",
                                    "  \"body-json\": \"$input.json('$')\",\n",
                                    "  \"params\" : {\n",
                                    "    #foreach($type in $allParams.keySet())\n",
                                    "      #set($params = $allParams.get($type))\n",
                                    "      \"$type\" : {\n",
                                    "        #foreach($paramName in $params.keySet())\n",
                                    "          \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\"\n",
                                    "          #if($foreach.hasNext),#end\n",
                                    "        #end\n",
                                    "      }\n",
                                    "    #if($foreach.hasNext),#end\n",
                                    "    #end\n",
                                    "  },\n",
                                    "  \"stage-variables\": {\n",
                                    "    #foreach($key in $stageVariables.keySet())\n",
                                    "      \"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\"\n",
                                    "      #if($foreach.hasNext),#end\n",
                                    "    #end\n",
                                    "  },\n",
                                    "  \"context\" : {\n",
                                    "    \"account-id\" : \"$context.identity.accountId\",\n",
                                    "    \"api-id\" : \"$context.apiId\",\n",
                                    "    \"api-key\" : \"$context.identity.apiKey\",\n",
                                    "    \"authorizer-principal-id\" : \"$context.authorizer.principalId\",\n",
                                    "    \"caller\" : \"$context.identity.caller\",\n",
                                    "    \"cognito-authentication-provider\" : \"$context.identity.cognitoAuthenticationProvider\",\n",
                                    "    \"cognito-authentication-type\" : \"$context.identity.cognitoAuthenticationType\",\n",
                                    "    \"cognito-identity-id\" : \"$context.identity.cognitoIdentityId\",\n",
                                    "    \"cognito-identity-pool-id\" : \"$context.identity.cognitoIdentityPoolId\",\n",
                                    "    \"http-method\" : \"$context.httpMethod\",\n",
                                    "    \"stage\" : \"$context.stage\",\n",
                                    "    \"source-ip\" : \"$context.identity.sourceIp\",\n",
                                    "    \"user\" : \"$context.identity.user\",\n",
                                    "    \"user-agent\" : \"$context.identity.userAgent\",\n",
                                    "    \"user-arn\" : \"$context.identity.userArn\",\n",
                                    "    \"request-id\" : \"$context.requestId\",\n",
                                    "    \"resource-id\" : \"$context.resourceId\",\n",
                                    "    \"resource-path\" : \"$context.resourcePath\"\n",
                                    "  }\n",
                                    "}"
                                ]
                            ]
                        }
                    }
                },
                "RequestParameters": {
                    "method.request.querystring.name": false
                },
                "ResourceId": {
                    "Ref": "GreetingResource"
                },
                "RestApiId": {
                    "Ref": "GreetingApi"
                },
                "MethodResponses": [
                    {
                        "StatusCode": 200
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "769f1361-008d-4511-858d-c5e3a5c5538e"
                }
            }
        }
    },
    "Outputs": {
        "RootUrl": {
            "Description": "Root URL of the API gateway",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Ref": "GreetingApi"
                        },
                        ".execute-api.",
                        {
                            "Ref": "AWS::Region"
                        },
                        ".amazonaws.com"
                    ]
                ]
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "d2bda338-8149-454e-b6f6-4cc5d9c6271d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 630,
                    "y": 210
                },
                "z": 1,
                "embeds": []
            },
            "4d95c259-ebad-4ea8-ae41-81e1ce6f827c": {
                "size": {
                    "width": 510,
                    "height": 510
                },
                "position": {
                    "x": 60,
                    "y": 90
                },
                "z": 1,
                "embeds": [
                    "5485849b-2e13-4221-ac9d-1dabef8ee52a",
                    "12f34a87-f392-4ad6-a57c-f06e05c2dbf5",
                    "3e7b0636-6106-4dbf-81f0-c2b623096d35"
                ]
            },
            "5485849b-2e13-4221-ac9d-1dabef8ee52a": {
                "size": {
                    "width": 330,
                    "height": 240
                },
                "position": {
                    "x": 90,
                    "y": 150
                },
                "z": 2,
                "parent": "4d95c259-ebad-4ea8-ae41-81e1ce6f827c",
                "embeds": [
                    "769f1361-008d-4511-858d-c5e3a5c5538e",
                    "7a48fe27-bbc2-4ef3-87c2-25a205b85314"
                ],
                "iscontainedinside": [
                    "4d95c259-ebad-4ea8-ae41-81e1ce6f827c",
                    "4d95c259-ebad-4ea8-ae41-81e1ce6f827c"
                ]
            },
            "7e63237c-45d5-4fe9-bc08-882aacf89696": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 630,
                    "y": 330
                },
                "z": 1,
                "embeds": []
            },
            "91e05e21-3996-4099-b643-aa913de3ad8f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 630,
                    "y": 450
                },
                "z": 1,
                "embeds": []
            },
            "2532fbfa-7fcb-45f4-be11-63e41eaa08ff": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 630,
                    "y": 570
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "91e05e21-3996-4099-b643-aa913de3ad8f"
                ]
            },
            "769f1361-008d-4511-858d-c5e3a5c5538e": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 120,
                    "y": 210
                },
                "z": 3,
                "parent": "5485849b-2e13-4221-ac9d-1dabef8ee52a",
                "embeds": [],
                "iscontainedinside": [
                    "5485849b-2e13-4221-ac9d-1dabef8ee52a",
                    "4d95c259-ebad-4ea8-ae41-81e1ce6f827c",
                    "5485849b-2e13-4221-ac9d-1dabef8ee52a"
                ],
                "dependson": [
                    "2532fbfa-7fcb-45f4-be11-63e41eaa08ff"
                ]
            },
            "7a48fe27-bbc2-4ef3-87c2-25a205b85314": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 240,
                    "y": 210
                },
                "z": 3,
                "parent": "5485849b-2e13-4221-ac9d-1dabef8ee52a",
                "embeds": [],
                "iscontainedinside": [
                    "5485849b-2e13-4221-ac9d-1dabef8ee52a",
                    "4d95c259-ebad-4ea8-ae41-81e1ce6f827c",
                    "5485849b-2e13-4221-ac9d-1dabef8ee52a"
                ],
                "dependson": [
                    "2532fbfa-7fcb-45f4-be11-63e41eaa08ff"
                ]
            },
            "12f34a87-f392-4ad6-a57c-f06e05c2dbf5": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 90,
                    "y": 450
                },
                "z": 2,
                "parent": "4d95c259-ebad-4ea8-ae41-81e1ce6f827c",
                "embeds": [],
                "iscontainedinside": [
                    "4d95c259-ebad-4ea8-ae41-81e1ce6f827c",
                    "4d95c259-ebad-4ea8-ae41-81e1ce6f827c"
                ],
                "dependson": [
                    "7a48fe27-bbc2-4ef3-87c2-25a205b85314",
                    "769f1361-008d-4511-858d-c5e3a5c5538e"
                ]
            },
            "3e7b0636-6106-4dbf-81f0-c2b623096d35": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 210,
                    "y": 450
                },
                "z": 2,
                "parent": "4d95c259-ebad-4ea8-ae41-81e1ce6f827c",
                "embeds": [],
                "isassociatedwith": [
                    "12f34a87-f392-4ad6-a57c-f06e05c2dbf5"
                ],
                "iscontainedinside": [
                    "4d95c259-ebad-4ea8-ae41-81e1ce6f827c",
                    "4d95c259-ebad-4ea8-ae41-81e1ce6f827c"
                ],
                "dependson": [
                    "d2bda338-8149-454e-b6f6-4cc5d9c6271d"
                ]
            }
        }
    }
}
